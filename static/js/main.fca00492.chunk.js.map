{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","item","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","toFixed","IncomeExpenses","amounts","transaction","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fca00492.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n\treturn <h2>Expense Tracker</h2>;\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DELETE_TRANSACTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: state.transactions.filter(\r\n\t\t\t\t\t(item) => item.id !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tcase 'ADD_TRANSACTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: [action.payload, ...state.transactions],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//intia state\r\nconst initialState = {\r\n\ttransactions: [],\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\t//Actions\r\n\tconst deleteTransaction = (id) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'DELETE_TRANSACTION',\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t};\r\n\r\n\tconst addTransaction = (item) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD_TRANSACTION',\r\n\t\t\tpayload: item,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttransactions: state.transactions,\r\n\t\t\t\tdeleteTransaction,\r\n\t\t\t\taddTransaction,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n\tconst { transactions } = useContext(GlobalContext);\r\n\r\n\tconst amounts = transactions.map((item) => item.amount);\r\n\r\n\tconst total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Your Balance</h4>\r\n\t\t\t<h1>${total}</h1>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n\tconst { transactions } = useContext(GlobalContext);\r\n\r\n\tconst amounts = transactions.map((transaction) => transaction.amount);\r\n\tconst income = amounts\r\n\t\t.filter((item) => item > 0)\r\n\t\t.reduce((acc, item) => (acc += item), 0)\r\n\t\t.toFixed(2);\r\n\r\n\tconst expense = (\r\n\t\tamounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n\t\t-1\r\n\t).toFixed(2);\r\n\treturn (\r\n\t\t<div className=\"inc-exp-container\">\r\n\t\t\t<div>\r\n\t\t\t\t<h4>Income</h4>\r\n\t\t\t\t<p className=\"money plus\">{income}</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>Expense</h4>\r\n\t\t\t\t<p className=\"money minus\">{expense}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ item }) => {\r\n\tconst { deleteTransaction } = useContext(GlobalContext);\r\n\tconst sign = item.amount < 0 ? '-' : '+';\r\n\treturn (\r\n\t\t<li className={item.amount < 0 ? 'minus' : 'plus'}>\r\n\t\t\t{item.text}{' '}\r\n\t\t\t<span>\r\n\t\t\t\t{sign}${Math.abs(item.amount)}\r\n\t\t\t</span>\r\n\t\t\t<button onClick={() => deleteTransaction(item.id)} className=\"delete-btn\">\r\n\t\t\t\tx\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from 'react';\r\nimport Transaction from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst TransactionList = () => {\r\n\tconst { transactions } = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>History</h3>\r\n\t\t\t<ul className=\"list\">\r\n\t\t\t\t{transactions.map((item) => (\r\n\t\t\t\t\t<Transaction key={item.id} item={item} />\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [amount, setAmount] = useState(0);\r\n\r\n\tconst { addTransaction } = useContext(GlobalContext);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst newTransaction = {\r\n\t\t\tid: Math.floor(Math.random() * 100000000),\r\n\t\t\ttext,\r\n\t\t\tamount: +amount,\r\n\t\t};\r\n\r\n\t\taddTransaction(newTransaction);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Add new transaction</h3>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t<label htmlFor=\"text\">Text</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Enter text...\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t<label htmlFor=\"amount\">\r\n\t\t\t\t\t\tAmount <br />\r\n\t\t\t\t\t\t(negative - expense, positive - income)\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Enter amount...\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn\">Add transaction</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddTransaction;\r\n","import './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n\treturn (\n\t\t<GlobalProvider>\n\t\t\t<Header />\n\t\t\t<div className=\"container\">\n\t\t\t\t<Balance />\n\t\t\t\t<IncomeExpenses />\n\t\t\t\t<TransactionList />\n\t\t\t\t<AddTransaction />\n\t\t\t</div>\n\t\t</GlobalProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}